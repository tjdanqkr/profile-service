CREATE TABLE IF NOT EXISTS USERS (
    USER_ID BINARY(16) NOT NULL,
    USERNAME VARCHAR(255) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL,
    ROLE VARCHAR(50) NOT NULL,
    CREATED_AT DATETIME(6) NOT NULL,
    UPDATED_AT DATETIME(6) NOT NULL,
    PRIMARY KEY (USER_ID),
    INDEX IDX_USER_USERNAME (USERNAME),
    INDEX IDX_USER_CREATED_AT (CREATED_AT)
);

CREATE TABLE IF NOT EXISTS PROFILES (
    PROFILE_ID BINARY(16) NOT NULL,
    TITLE VARCHAR(255) NOT NULL,
    CONTENT TEXT NOT NULL,
    IS_DELETED BOOLEAN NOT NULL,
    VIEW_COUNT BIGINT NOT NULL,
    USER_ID BINARY(16) NOT NULL UNIQUE,
    USERNAME VARCHAR(255) NOT NULL UNIQUE,
    CREATED_AT DATETIME(6) NOT NULL,
    UPDATED_AT DATETIME(6) NOT NULL,
    PRIMARY KEY (PROFILE_ID),
    INDEX IDX_PROFILE_USERID (USER_ID),
    INDEX IDX_PROFILE_USERNAME (USERNAME),
    INDEX IDX_PROFILE_TITLE (TITLE),
    INDEX IDX_PROFILE_CREATED_AT (CREATED_AT)
);

CREATE TABLE IF NOT EXISTS PROFILES_VIEWS (
    PROFILE_VIEW_ID BIGINT NOT NULL AUTO_INCREMENT,
    PROFILE_ID BINARY(16) NOT NULL,
    VIEWED_AT DATETIME(6) NOT NULL,
    PRIMARY KEY (PROFILE_VIEW_ID),
    FOREIGN KEY (PROFILE_ID) REFERENCES PROFILES(PROFILE_ID) ON DELETE CASCADE,
    INDEX IDX_PROFILE_VIEWED_PROFILE_ID (PROFILE_ID)
);


CREATE TABLE IF NOT EXISTS USER_POINTS (
    POINT_ID BIGINT NOT NULL AUTO_INCREMENT,
    POINT BIGINT NOT NULL,
    CREATED_AT DATETIME(6) NOT NULL,
    UPDATED_AT DATETIME(6) NOT NULL,
    USER_ID BINARY(16) NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    PRIMARY KEY (POINT_ID)
);

CREATE TABLE IF NOT EXISTS USER_POINTS_LOG (
    USER_POINTS_LOG_ID BIGINT NOT NULL AUTO_INCREMENT,
    USERID BINARY(16) NOT NULL,
    COUPON_IS_USED BOOLEAN NOT NULL DEFAULT FALSE,
    COUPON_ID BINARY(16),
    COUPON_CODE VARCHAR(255),
    USER_COUPON_ID BIGINT,
    COUPON_DESCRIPTION VARCHAR(255),
    COUPON_DISCOUNT_AMOUNT BIGINT,
    BEFORE_POINTS BIGINT NOT NULL,
    AFTER_POINTS BIGINT NOT NULL,
    POINTS_AMOUNT BIGINT NOT NULL,
    POINT_LOG_TYPE VARCHAR(50) NOT NULL,
    PRODUCT_ID BIGINT,
    PRODUCT_NAME VARCHAR(255),
    PRODUCT_PRICE BIGINT,
    CREATED_AT DATETIME(6) NOT NULL,
    UPDATED_AT DATETIME(6) NOT NULL,
    PRIMARY KEY (USER_POINTS_LOG_ID),
    INDEX IDX_PAYMENT_USER_COUPON_USERID (USERID),
    INDEX IDX_PAYMENT_USER_COUPON_COUPON_ID (COUPON_ID),
    INDEX IDX_PAYMENT_USER_COUPON_COUPON_CODE (COUPON_CODE),
    INDEX IDX_PAYMENT_USER_COUPON_IS_USED (COUPON_IS_USED),
    INDEX IDX_PAYMENT_USER_COUPON_EXPIRATION_DATE (CREATED_AT),
    INDEX IDX_PAYMENT_USER_COUPON_PRODUCT_ID (PRODUCT_ID),
    INDEX IDX_PAYMENT_USER_COUPON_PRODUCT_NAME (PRODUCT_NAME)
);

CREATE TABLE IF NOT EXISTS USER_COUPONS (
    USER_COUPON_ID BIGINT NOT NULL AUTO_INCREMENT,
    USER_ID BINARY(16) NOT NULL,
    COUPON_ID BINARY(16) NOT NULL,
    COUPON_CODE VARCHAR(255) NOT NULL,
    COUPON_IS_PERCENTAGE BOOLEAN NOT NULL,
    DISCOUNT_AMOUNT BIGINT NOT NULL,
    EXPIRATION_DATE DATETIME(6) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    IS_USED BOOLEAN NOT NULL DEFAULT FALSE,
    CREATED_AT DATETIME(6) NOT NULL,
    UPDATED_AT DATETIME(6) NOT NULL,
    PRIMARY KEY (USER_COUPON_ID),
    INDEX IDX_USERID (USER_ID),
    INDEX IDX_COUPON_ID (COUPON_ID),
    INDEX IDX_COUPON_CODE (COUPON_CODE),
    INDEX IDX_IS_USED (IS_USED),
    INDEX IDX_EXPIRATION_DATE (EXPIRATION_DATE)
);

CREATE TABLE IF NOT EXISTS PAYMENT_TRANSACTIONS (
    TRANSACTION_ID BIGINT NOT NULL AUTO_INCREMENT,
    USER_ID BINARY(16) NOT NULL,
    ORDER_ID BINARY(16) NOT NULL,
    ORDER_NAME VARCHAR(255) NOT NULL,
    TRANSACTION_AMOUNT BIGINT NOT NULL,
    TRANSACTION_STATUS VARCHAR(50) NOT NULL,
    PAYMENT_CONFIRM_STATUS VARCHAR(50) NOT NULL,
    PG_TYPE VARCHAR(50) NOT NULL,
    PG_SUPPORT_KEY VARCHAR(255),
    RECEIPT_URL VARCHAR(1000),
    RECEIPT_BODY TEXT,
    PAYMENT_RESPONSE TEXT,
    IS_CANCELED BOOLEAN NOT NULL DEFAULT FALSE,
    CREATED_AT DATETIME(6) NOT NULL,
    UPDATED_AT DATETIME(6) NOT NULL,
    PRIMARY KEY (TRANSACTION_ID),
    UNIQUE (ORDER_ID),
    INDEX IDX_PAYMENT_TRANSACTION_USER_ID (USER_ID),
    INDEX IDX_PAYMENT_TRANSACTION_CREATED_AT (CREATED_AT),
    INDEX IDX_PAYMENT_TRANSACTION_ORDER_ID (ORDER_ID),
    INDEX IDX_PAYMENT_TRANSACTION_TRANSACTION_STATUS (TRANSACTION_STATUS),
    INDEX IDX_PAYMENT_TRANSACTION_PAYMENT_CONFIRM_STATUS (PAYMENT_CONFIRM_STATUS),
    INDEX IDX_PAYMENT_TRANSACTION_PG_TYPE (PG_TYPE)
);

CREATE TABLE IF NOT EXISTS PAYMENT_CANCELLATIONS (
    CANCELLATION_ID BIGINT NOT NULL AUTO_INCREMENT,
    TRANSACTION_ID BIGINT NOT NULL,
    CANCEL_AMOUNT BIGINT NOT NULL,
    CANCEL_REASON VARCHAR(255),
    CANCEL_RECEIPT_URL VARCHAR(1000),
    CANCEL_RESPONSE TEXT,
    CREATED_AT DATETIME(6) NOT NULL,
    UPDATED_AT DATETIME(6) NOT NULL,
    PRIMARY KEY (CANCELLATION_ID),
    UNIQUE (TRANSACTION_ID),
    FOREIGN KEY (TRANSACTION_ID) REFERENCES PAYMENT_TRANSACTIONS(TRANSACTION_ID) ON DELETE CASCADE,
    INDEX IDX_PAYMENT_CANCELLATION_TRANSACTION_ID (TRANSACTION_ID),
    INDEX IDX_PAYMENT_CANCELLATION_CREATED_AT (CREATED_AT)
);

CREATE TABLE IF NOT EXISTS PRODUCTS (
    PRODUCT_ID BIGINT NOT NULL AUTO_INCREMENT,
    PRODUCT_NAME VARCHAR(255) NOT NULL,
    PRODUCT_PRICE BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    INDEX IDX_PRODUCT_NAME (PRODUCT_NAME),
    INDEX IDX_PRODUCT_PRICE (PRODUCT_PRICE)
);